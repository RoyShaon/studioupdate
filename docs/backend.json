{
  "entities": {
    "Patient": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Patient",
      "type": "object",
      "description": "Represents a patient whose information is included on a medication label.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the Patient entity."
        },
        "serialNumber": {
          "type": "string",
          "description": "The serial number associated with the patient or the medication."
        },
        "name": {
          "type": "string",
          "description": "The name of the patient."
        },
        "dateOfBirth": {
          "type": "string",
          "description": "The date of birth of the patient, stored as a string.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "MedicationLabel": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "MedicationLabel",
      "type": "object",
      "description": "Represents a medication label generated by the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the MedicationLabel entity."
        },
        "patientId": {
          "type": "string",
          "description": "Reference to Patient. (Relationship: Patient 1:N MedicationLabel)"
        },
        "drops": {
          "type": "number",
          "description": "The number of drops to administer."
        },
        "shakeCount": {
          "type": "number",
          "description": "The number of times to shake the medication."
        },
        "intervalHours": {
          "type": "number",
          "description": "The interval in hours between doses."
        },
        "shakeMode": {
          "type": "string",
          "description": "Specifies the shake mode, e.g., 'Shake সহ' or 'Shake ছাড়া'.",
          "format": "string"
        },
        "counselingInstructions": {
          "type": "string",
          "description": "Counseling instructions for the patient."
        },
        "dateCreated": {
          "type": "string",
          "description": "The date and time when the label was created.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "patientId",
        "drops",
        "intervalHours"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/patients/{patientId}",
        "definition": {
          "entityName": "Patient",
          "schema": {
            "$ref": "#/backend/entities/Patient"
          },
          "description": "Stores patient information. No denormalized authorization fields are required as access is based on simple authentication.",
          "params": [
            {
              "name": "patientId",
              "description": "The unique identifier for the patient."
            }
          ]
        }
      },
      {
        "path": "/patients/{patientId}/medicationLabels/{medicationLabelId}",
        "definition": {
          "entityName": "MedicationLabel",
          "schema": {
            "$ref": "#/backend/entities/MedicationLabel"
          },
          "description": "Stores medication labels associated with a specific patient. Includes 'patientId' for reference. No denormalized authorization fields are required as access is based on simple authentication.",
          "params": [
            {
              "name": "patientId",
              "description": "The unique identifier for the patient."
            },
            {
              "name": "medicationLabelId",
              "description": "The unique identifier for the medication label."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to manage patient and medication label data efficiently. Patient data is stored separately from medication labels to optimize querying and data management. Each patient can have multiple medication labels associated with them. The structure prioritizes authorization independence by not needing to access parent documents to determine access to subcollection documents.\n\nAuthorization Independence (CRITICAL):  Authorization rules for medication labels are based on the current user's authentication status. Access is granted to authenticated users to create, read, update, and delete labels.\n\nClarity of Intent (Debuggability): The structure clearly separates patient data from medication label data, making it easy to understand and manage the data relationships.\n\nQAPs (Rules are not Filters): The structure supports secure list operations by applying security rules at the collection level, ensuring that users can only access labels they are authorized to view.\n\nInvariants:  The structure supports the integrity of ownership and timestamps by storing these attributes directly in the documents. This ensures that the data remains consistent and reliable.\n\nDenormalization is not explicitly required in this case as there is no collaborative data or complex ownership to model. Access is based on simple authentication."
  }
}